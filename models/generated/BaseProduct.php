<?php

/**
 * BaseProduct
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $cover_sticker
 * @property string $sticker
 * @property string $detail
 * @property integer $price
 * @property string $weight
 * @property string $size
 * @property string $burning
 * @property string $material
 * @property string $method
 * @property integer $type_id
 * @property integer $is_soldout
 * @property integer $is_active
 * @property Type $Type
 * @property Doctrine_Collection $Collect
 * @property Doctrine_Collection $CartList
 * @property Doctrine_Collection $ColorPic
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseProduct extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('product');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('cover_sticker', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('sticker', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('detail', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('price', 'integer', 10, array(
             'type' => 'integer',
             'length' => '10',
             ));
        $this->hasColumn('weight', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('size', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('burning', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('material', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('method', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('type_id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('is_soldout', 'integer', 1, array(
             'type' => 'integer',
             'default' => '0',
             'length' => '1',
             ));
        $this->hasColumn('is_active', 'integer', 1, array(
             'type' => 'integer',
             'default' => '1',
             'length' => '1',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Type', array(
             'local' => 'type_id',
             'foreign' => 'id'));

        $this->hasMany('Collect', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('CartList', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('ColorPic', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}